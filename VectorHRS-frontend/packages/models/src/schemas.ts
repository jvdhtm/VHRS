/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/address/": {
    get: operations["address_list"];
    post: operations["address_create"];
    parameters: {};
  };
  "/address/{id}/": {
    get: operations["address_read"];
    put: operations["address_update"];
    delete: operations["address_delete"];
    patch: operations["address_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this address. */
        id: number;
      };
    };
  };
  "/app/": {
    get: operations["app_list"];
    post: operations["app_create"];
    parameters: {};
  };
  "/app/{id}/": {
    get: operations["app_read"];
    put: operations["app_update"];
    delete: operations["app_delete"];
    patch: operations["app_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this app. */
        id: number;
      };
    };
  };
  "/comments/": {
    get: operations["comments_list"];
    post: operations["comments_create"];
    parameters: {};
  };
  "/comments/{id}/": {
    get: operations["comments_read"];
    put: operations["comments_update"];
    delete: operations["comments_delete"];
    patch: operations["comments_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this comments. */
        id: number;
      };
    };
  };
  "/condition/": {
    get: operations["condition_list"];
    post: operations["condition_create"];
    parameters: {};
  };
  "/condition/{id}/": {
    get: operations["condition_read"];
    put: operations["condition_update"];
    delete: operations["condition_delete"];
    patch: operations["condition_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this condition. */
        id: number;
      };
    };
  };
  "/department/": {
    get: operations["department_list"];
    post: operations["department_create"];
    parameters: {};
  };
  "/department/{id}/": {
    get: operations["department_read"];
    put: operations["department_update"];
    delete: operations["department_delete"];
    patch: operations["department_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this department. */
        id: number;
      };
    };
  };
  "/expertise/": {
    get: operations["expertise_list"];
    post: operations["expertise_create"];
    parameters: {};
  };
  "/expertise/{id}/": {
    get: operations["expertise_read"];
    put: operations["expertise_update"];
    delete: operations["expertise_delete"];
    patch: operations["expertise_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this expertise. */
        id: number;
      };
    };
  };
  "/expertiseprofile/": {
    get: operations["expertiseprofile_list"];
    post: operations["expertiseprofile_create"];
    parameters: {};
  };
  "/expertiseprofile/{id}/": {
    get: operations["expertiseprofile_read"];
    put: operations["expertiseprofile_update"];
    delete: operations["expertiseprofile_delete"];
    patch: operations["expertiseprofile_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this expertise profile. */
        id: number;
      };
    };
  };
  "/function/": {
    get: operations["function_list"];
    post: operations["function_create"];
    parameters: {};
  };
  "/function/{id}/": {
    get: operations["function_read"];
    put: operations["function_update"];
    delete: operations["function_delete"];
    patch: operations["function_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this function. */
        id: number;
      };
    };
  };
  "/person/": {
    get: operations["person_list"];
    post: operations["person_create"];
    parameters: {};
  };
  "/person/{id}/": {
    get: operations["person_read"];
    put: operations["person_update"];
    delete: operations["person_delete"];
    patch: operations["person_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this person. */
        id: number;
      };
    };
  };
  "/personlog/": {
    get: operations["personlog_list"];
    post: operations["personlog_create"];
    parameters: {};
  };
  "/personlog/{id}/": {
    get: operations["personlog_read"];
    put: operations["personlog_update"];
    delete: operations["personlog_delete"];
    patch: operations["personlog_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this person log. */
        id: number;
      };
    };
  };
  "/personstage/": {
    get: operations["personstage_list"];
    post: operations["personstage_create"];
    parameters: {};
  };
  "/personstage/{id}/": {
    get: operations["personstage_read"];
    put: operations["personstage_update"];
    delete: operations["personstage_delete"];
    patch: operations["personstage_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this person stage. */
        id: number;
      };
    };
  };
  "/phone/": {
    get: operations["phone_list"];
    post: operations["phone_create"];
    parameters: {};
  };
  "/phone/{id}/": {
    get: operations["phone_read"];
    put: operations["phone_update"];
    delete: operations["phone_delete"];
    patch: operations["phone_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this phone. */
        id: number;
      };
    };
  };
  "/role/": {
    get: operations["role_list"];
    post: operations["role_create"];
    parameters: {};
  };
  "/role/{id}/": {
    get: operations["role_read"];
    put: operations["role_update"];
    delete: operations["role_delete"];
    patch: operations["role_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this role. */
        id: number;
      };
    };
  };
  "/staff/": {
    get: operations["staff_list"];
    post: operations["staff_create"];
    parameters: {};
  };
  "/staff/{id}/": {
    get: operations["staff_read"];
    put: operations["staff_update"];
    delete: operations["staff_delete"];
    patch: operations["staff_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this staff. */
        id: number;
      };
    };
  };
  "/stafffunctions/": {
    get: operations["stafffunctions_list"];
    post: operations["stafffunctions_create"];
    parameters: {};
  };
  "/stafffunctions/{id}/": {
    get: operations["stafffunctions_read"];
    put: operations["stafffunctions_update"];
    delete: operations["stafffunctions_delete"];
    patch: operations["stafffunctions_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this staff functions. */
        id: number;
      };
    };
  };
  "/stafflog/": {
    get: operations["stafflog_list"];
    post: operations["stafflog_create"];
    parameters: {};
  };
  "/stafflog/{id}/": {
    get: operations["stafflog_read"];
    put: operations["stafflog_update"];
    delete: operations["stafflog_delete"];
    patch: operations["stafflog_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this staff log. */
        id: number;
      };
    };
  };
  "/staffstage/": {
    get: operations["staffstage_list"];
    post: operations["staffstage_create"];
    parameters: {};
  };
  "/staffstage/{id}/": {
    get: operations["staffstage_read"];
    put: operations["staffstage_update"];
    delete: operations["staffstage_delete"];
    patch: operations["staffstage_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this staff stage. */
        id: number;
      };
    };
  };
  "/user/": {
    get: operations["user_list"];
    post: operations["user_create"];
    parameters: {};
  };
  "/user/{id}/": {
    get: operations["user_read"];
    put: operations["user_update"];
    delete: operations["user_delete"];
    patch: operations["user_partial_update"];
    parameters: {
      path: {
        /** A unique integer value identifying this user. */
        id: number;
      };
    };
  };
}

export interface definitions {
  Address: {
    id?: number;
    staff: number;
    description?: string;
    address1?: string;
    address2?: string;
    zip?: string;
    city?: string;
    country?: string;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  App: {
    id?: number;
    title: string;
    pathUrl: string;
  };
  Comments: {
    id?: number;
    staff: number;
    name?: string;
    description?: string;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  Condition: {
    id?: number;
    severity: "1" | "2" | "3";
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  Department: {
    id?: number;
    description?: string;
    shape: "circle" | "square" | "rectangle" | "triangle";
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  Expertise: {
    id?: number;
    name?: string;
    description?: string;
    parentId?: number;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  ExpertiseProfile: {
    id?: number;
    name?: string;
    description?: string;
    person: number;
    expertise: number;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  Function: {
    id?: number;
    name?: string;
    description?: string;
    shape: "circle" | "square" | "rectangle" | "triangle";
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  Person: {
    id?: number;
    firstname?: string;
    lastname?: string;
    age: number;
    nationalId?: string;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  PersonLog: {
    id?: number;
    description?: string;
    stage: number;
    person: number;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  PersonStage: {
    id?: number;
    name?: string;
    description?: string;
    step:
      | "communication"
      | "answers"
      | "pending"
      | "interview"
      | "contract"
      | "rejection"
      | "refusal"
      | "recommendation"
      | "questions"
      | "invitations";
    x: number;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  Phone: {
    id?: number;
    staff: number;
    description?: string;
    phoneNumber?: string;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  Role: {
    id?: number;
    title: string;
    user: number;
    permission?: "R" | "W" | "RW" | "RWD";
    app: number;
  };
  Staff: {
    id?: number;
    department: number;
    condition: number;
    title?: string;
    bossId?: number;
    who: number;
    x: number;
    y: number;
    level: number;
  };
  StaffFunctions: {
    id?: number;
    function: number;
    staff: number;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  StaffLog: {
    id?: number;
    description?: string;
    stage: number;
    with_person?: number;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  StaffStage: {
    id?: number;
    name?: string;
    description?: string;
    step:
      | "communication"
      | "answers"
      | "meeting"
      | "surveys"
      | "administrative"
      | "complains"
      | "problems"
      | "feedBack"
      | "requirements"
      | "legal"
      | "questions"
      | "gifts"
      | "invitations";
    x: number;
    status: "activated" | "deactivated" | "pending" | "confirmed" | "archived";
    created_date_time?: string;
  };
  User: {
    id?: number;
    email: string;
    passcode: string;
    first_name: string;
    last_name: string;
    is_active?: boolean;
  };
}

export interface operations {
  address_list: {
    parameters: {
      query: {
        id?: number;
        staff?: string;
        description?: string;
        address1?: string;
        address2?: string;
        zip?: string;
        city?: string;
        country?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Address"][];
        };
      };
    };
  };
  address_create: {
    parameters: {
      body: {
        data: definitions["Address"];
      };
    };
    responses: {
      201: {
        schema: definitions["Address"];
      };
    };
  };
  address_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this address. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Address"];
      };
    };
  };
  address_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this address. */
        id: number;
      };
      body: {
        data: definitions["Address"];
      };
    };
    responses: {
      200: {
        schema: definitions["Address"];
      };
    };
  };
  address_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this address. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  address_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this address. */
        id: number;
      };
      body: {
        data: definitions["Address"];
      };
    };
    responses: {
      200: {
        schema: definitions["Address"];
      };
    };
  };
  app_list: {
    parameters: {
      query: {
        id?: number;
        title?: string;
        pathUrl?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["App"][];
        };
      };
    };
  };
  app_create: {
    parameters: {
      body: {
        data: definitions["App"];
      };
    };
    responses: {
      201: {
        schema: definitions["App"];
      };
    };
  };
  app_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this app. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["App"];
      };
    };
  };
  app_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this app. */
        id: number;
      };
      body: {
        data: definitions["App"];
      };
    };
    responses: {
      200: {
        schema: definitions["App"];
      };
    };
  };
  app_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this app. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  app_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this app. */
        id: number;
      };
      body: {
        data: definitions["App"];
      };
    };
    responses: {
      200: {
        schema: definitions["App"];
      };
    };
  };
  comments_list: {
    parameters: {
      query: {
        id?: number;
        staff?: string;
        name?: string;
        description?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Comments"][];
        };
      };
    };
  };
  comments_create: {
    parameters: {
      body: {
        data: definitions["Comments"];
      };
    };
    responses: {
      201: {
        schema: definitions["Comments"];
      };
    };
  };
  comments_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this comments. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Comments"];
      };
    };
  };
  comments_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this comments. */
        id: number;
      };
      body: {
        data: definitions["Comments"];
      };
    };
    responses: {
      200: {
        schema: definitions["Comments"];
      };
    };
  };
  comments_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this comments. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  comments_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this comments. */
        id: number;
      };
      body: {
        data: definitions["Comments"];
      };
    };
    responses: {
      200: {
        schema: definitions["Comments"];
      };
    };
  };
  condition_list: {
    parameters: {
      query: {
        id?: number;
        severity?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Condition"][];
        };
      };
    };
  };
  condition_create: {
    parameters: {
      body: {
        data: definitions["Condition"];
      };
    };
    responses: {
      201: {
        schema: definitions["Condition"];
      };
    };
  };
  condition_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this condition. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Condition"];
      };
    };
  };
  condition_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this condition. */
        id: number;
      };
      body: {
        data: definitions["Condition"];
      };
    };
    responses: {
      200: {
        schema: definitions["Condition"];
      };
    };
  };
  condition_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this condition. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  condition_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this condition. */
        id: number;
      };
      body: {
        data: definitions["Condition"];
      };
    };
    responses: {
      200: {
        schema: definitions["Condition"];
      };
    };
  };
  department_list: {
    parameters: {
      query: {
        id?: number;
        description?: string;
        shape?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Department"][];
        };
      };
    };
  };
  department_create: {
    parameters: {
      body: {
        data: definitions["Department"];
      };
    };
    responses: {
      201: {
        schema: definitions["Department"];
      };
    };
  };
  department_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this department. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Department"];
      };
    };
  };
  department_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this department. */
        id: number;
      };
      body: {
        data: definitions["Department"];
      };
    };
    responses: {
      200: {
        schema: definitions["Department"];
      };
    };
  };
  department_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this department. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  department_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this department. */
        id: number;
      };
      body: {
        data: definitions["Department"];
      };
    };
    responses: {
      200: {
        schema: definitions["Department"];
      };
    };
  };
  expertise_list: {
    parameters: {
      query: {
        id?: number;
        name?: string;
        description?: string;
        parentId?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Expertise"][];
        };
      };
    };
  };
  expertise_create: {
    parameters: {
      body: {
        data: definitions["Expertise"];
      };
    };
    responses: {
      201: {
        schema: definitions["Expertise"];
      };
    };
  };
  expertise_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this expertise. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Expertise"];
      };
    };
  };
  expertise_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this expertise. */
        id: number;
      };
      body: {
        data: definitions["Expertise"];
      };
    };
    responses: {
      200: {
        schema: definitions["Expertise"];
      };
    };
  };
  expertise_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this expertise. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  expertise_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this expertise. */
        id: number;
      };
      body: {
        data: definitions["Expertise"];
      };
    };
    responses: {
      200: {
        schema: definitions["Expertise"];
      };
    };
  };
  expertiseprofile_list: {
    parameters: {
      query: {
        id?: number;
        name?: string;
        description?: string;
        person?: string;
        expertise?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["ExpertiseProfile"][];
        };
      };
    };
  };
  expertiseprofile_create: {
    parameters: {
      body: {
        data: definitions["ExpertiseProfile"];
      };
    };
    responses: {
      201: {
        schema: definitions["ExpertiseProfile"];
      };
    };
  };
  expertiseprofile_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this expertise profile. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["ExpertiseProfile"];
      };
    };
  };
  expertiseprofile_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this expertise profile. */
        id: number;
      };
      body: {
        data: definitions["ExpertiseProfile"];
      };
    };
    responses: {
      200: {
        schema: definitions["ExpertiseProfile"];
      };
    };
  };
  expertiseprofile_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this expertise profile. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  expertiseprofile_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this expertise profile. */
        id: number;
      };
      body: {
        data: definitions["ExpertiseProfile"];
      };
    };
    responses: {
      200: {
        schema: definitions["ExpertiseProfile"];
      };
    };
  };
  function_list: {
    parameters: {
      query: {
        id?: number;
        name?: string;
        description?: string;
        shape?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Function"][];
        };
      };
    };
  };
  function_create: {
    parameters: {
      body: {
        data: definitions["Function"];
      };
    };
    responses: {
      201: {
        schema: definitions["Function"];
      };
    };
  };
  function_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this function. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Function"];
      };
    };
  };
  function_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this function. */
        id: number;
      };
      body: {
        data: definitions["Function"];
      };
    };
    responses: {
      200: {
        schema: definitions["Function"];
      };
    };
  };
  function_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this function. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  function_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this function. */
        id: number;
      };
      body: {
        data: definitions["Function"];
      };
    };
    responses: {
      200: {
        schema: definitions["Function"];
      };
    };
  };
  person_list: {
    parameters: {
      query: {
        id?: number;
        firstname?: string;
        lastname?: string;
        age?: number;
        nationalId?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Person"][];
        };
      };
    };
  };
  person_create: {
    parameters: {
      body: {
        data: definitions["Person"];
      };
    };
    responses: {
      201: {
        schema: definitions["Person"];
      };
    };
  };
  person_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this person. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Person"];
      };
    };
  };
  person_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this person. */
        id: number;
      };
      body: {
        data: definitions["Person"];
      };
    };
    responses: {
      200: {
        schema: definitions["Person"];
      };
    };
  };
  person_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this person. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  person_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this person. */
        id: number;
      };
      body: {
        data: definitions["Person"];
      };
    };
    responses: {
      200: {
        schema: definitions["Person"];
      };
    };
  };
  personlog_list: {
    parameters: {
      query: {
        id?: number;
        description?: string;
        stage?: string;
        person?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["PersonLog"][];
        };
      };
    };
  };
  personlog_create: {
    parameters: {
      body: {
        data: definitions["PersonLog"];
      };
    };
    responses: {
      201: {
        schema: definitions["PersonLog"];
      };
    };
  };
  personlog_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this person log. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["PersonLog"];
      };
    };
  };
  personlog_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this person log. */
        id: number;
      };
      body: {
        data: definitions["PersonLog"];
      };
    };
    responses: {
      200: {
        schema: definitions["PersonLog"];
      };
    };
  };
  personlog_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this person log. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  personlog_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this person log. */
        id: number;
      };
      body: {
        data: definitions["PersonLog"];
      };
    };
    responses: {
      200: {
        schema: definitions["PersonLog"];
      };
    };
  };
  personstage_list: {
    parameters: {
      query: {
        id?: number;
        name?: string;
        description?: string;
        step?: string;
        x?: number;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["PersonStage"][];
        };
      };
    };
  };
  personstage_create: {
    parameters: {
      body: {
        data: definitions["PersonStage"];
      };
    };
    responses: {
      201: {
        schema: definitions["PersonStage"];
      };
    };
  };
  personstage_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this person stage. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["PersonStage"];
      };
    };
  };
  personstage_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this person stage. */
        id: number;
      };
      body: {
        data: definitions["PersonStage"];
      };
    };
    responses: {
      200: {
        schema: definitions["PersonStage"];
      };
    };
  };
  personstage_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this person stage. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  personstage_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this person stage. */
        id: number;
      };
      body: {
        data: definitions["PersonStage"];
      };
    };
    responses: {
      200: {
        schema: definitions["PersonStage"];
      };
    };
  };
  phone_list: {
    parameters: {
      query: {
        id?: number;
        staff?: string;
        description?: string;
        phoneNumber?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Phone"][];
        };
      };
    };
  };
  phone_create: {
    parameters: {
      body: {
        data: definitions["Phone"];
      };
    };
    responses: {
      201: {
        schema: definitions["Phone"];
      };
    };
  };
  phone_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this phone. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Phone"];
      };
    };
  };
  phone_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this phone. */
        id: number;
      };
      body: {
        data: definitions["Phone"];
      };
    };
    responses: {
      200: {
        schema: definitions["Phone"];
      };
    };
  };
  phone_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this phone. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  phone_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this phone. */
        id: number;
      };
      body: {
        data: definitions["Phone"];
      };
    };
    responses: {
      200: {
        schema: definitions["Phone"];
      };
    };
  };
  role_list: {
    parameters: {
      query: {
        id?: number;
        title?: string;
        user?: string;
        permission?: string;
        app?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Role"][];
        };
      };
    };
  };
  role_create: {
    parameters: {
      body: {
        data: definitions["Role"];
      };
    };
    responses: {
      201: {
        schema: definitions["Role"];
      };
    };
  };
  role_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this role. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Role"];
      };
    };
  };
  role_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this role. */
        id: number;
      };
      body: {
        data: definitions["Role"];
      };
    };
    responses: {
      200: {
        schema: definitions["Role"];
      };
    };
  };
  role_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this role. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  role_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this role. */
        id: number;
      };
      body: {
        data: definitions["Role"];
      };
    };
    responses: {
      200: {
        schema: definitions["Role"];
      };
    };
  };
  staff_list: {
    parameters: {
      query: {
        id?: number;
        department?: string;
        condition?: string;
        title?: string;
        bossId?: string;
        who?: string;
        x?: number;
        y?: number;
        level?: number;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["Staff"][];
        };
      };
    };
  };
  staff_create: {
    parameters: {
      body: {
        data: definitions["Staff"];
      };
    };
    responses: {
      201: {
        schema: definitions["Staff"];
      };
    };
  };
  staff_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["Staff"];
      };
    };
  };
  staff_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff. */
        id: number;
      };
      body: {
        data: definitions["Staff"];
      };
    };
    responses: {
      200: {
        schema: definitions["Staff"];
      };
    };
  };
  staff_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  staff_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff. */
        id: number;
      };
      body: {
        data: definitions["Staff"];
      };
    };
    responses: {
      200: {
        schema: definitions["Staff"];
      };
    };
  };
  stafffunctions_list: {
    parameters: {
      query: {
        id?: number;
        function?: string;
        staff?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["StaffFunctions"][];
        };
      };
    };
  };
  stafffunctions_create: {
    parameters: {
      body: {
        data: definitions["StaffFunctions"];
      };
    };
    responses: {
      201: {
        schema: definitions["StaffFunctions"];
      };
    };
  };
  stafffunctions_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff functions. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["StaffFunctions"];
      };
    };
  };
  stafffunctions_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff functions. */
        id: number;
      };
      body: {
        data: definitions["StaffFunctions"];
      };
    };
    responses: {
      200: {
        schema: definitions["StaffFunctions"];
      };
    };
  };
  stafffunctions_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff functions. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  stafffunctions_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff functions. */
        id: number;
      };
      body: {
        data: definitions["StaffFunctions"];
      };
    };
    responses: {
      200: {
        schema: definitions["StaffFunctions"];
      };
    };
  };
  stafflog_list: {
    parameters: {
      query: {
        id?: number;
        description?: string;
        stage?: string;
        with_person?: string;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["StaffLog"][];
        };
      };
    };
  };
  stafflog_create: {
    parameters: {
      body: {
        data: definitions["StaffLog"];
      };
    };
    responses: {
      201: {
        schema: definitions["StaffLog"];
      };
    };
  };
  stafflog_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff log. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["StaffLog"];
      };
    };
  };
  stafflog_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff log. */
        id: number;
      };
      body: {
        data: definitions["StaffLog"];
      };
    };
    responses: {
      200: {
        schema: definitions["StaffLog"];
      };
    };
  };
  stafflog_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff log. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  stafflog_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff log. */
        id: number;
      };
      body: {
        data: definitions["StaffLog"];
      };
    };
    responses: {
      200: {
        schema: definitions["StaffLog"];
      };
    };
  };
  staffstage_list: {
    parameters: {
      query: {
        id?: number;
        name?: string;
        description?: string;
        step?: string;
        x?: number;
        status?: string;
        created_date_time?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["StaffStage"][];
        };
      };
    };
  };
  staffstage_create: {
    parameters: {
      body: {
        data: definitions["StaffStage"];
      };
    };
    responses: {
      201: {
        schema: definitions["StaffStage"];
      };
    };
  };
  staffstage_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff stage. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["StaffStage"];
      };
    };
  };
  staffstage_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff stage. */
        id: number;
      };
      body: {
        data: definitions["StaffStage"];
      };
    };
    responses: {
      200: {
        schema: definitions["StaffStage"];
      };
    };
  };
  staffstage_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff stage. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  staffstage_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this staff stage. */
        id: number;
      };
      body: {
        data: definitions["StaffStage"];
      };
    };
    responses: {
      200: {
        schema: definitions["StaffStage"];
      };
    };
  };
  user_list: {
    parameters: {
      query: {
        id?: number;
        email?: string;
        passcode?: string;
        first_name?: string;
        last_name?: string;
        is_active?: string;
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        schema: {
          count: number;
          next?: string;
          previous?: string;
          results: definitions["User"][];
        };
      };
    };
  };
  user_create: {
    parameters: {
      body: {
        data: definitions["User"];
      };
    };
    responses: {
      201: {
        schema: definitions["User"];
      };
    };
  };
  user_read: {
    parameters: {
      path: {
        /** A unique integer value identifying this user. */
        id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["User"];
      };
    };
  };
  user_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this user. */
        id: number;
      };
      body: {
        data: definitions["User"];
      };
    };
    responses: {
      200: {
        schema: definitions["User"];
      };
    };
  };
  user_delete: {
    parameters: {
      path: {
        /** A unique integer value identifying this user. */
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  user_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this user. */
        id: number;
      };
      body: {
        data: definitions["User"];
      };
    };
    responses: {
      200: {
        schema: definitions["User"];
      };
    };
  };
}

export interface external {}
